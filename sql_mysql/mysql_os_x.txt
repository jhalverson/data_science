Jonathan Halverson
Thursday, June 23, 2016
-----------------------

### Make sure to start the server through system preferences

jhalverson$ mysql -p

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| test               |
+--------------------+
2 rows in set (0.06 sec)

mysql> use test;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> show tables;
+----------------+
| Tables_in_test |
+----------------+
| persons        |
| test_log       |
+----------------+
2 rows in set (0.00 sec)


mysql> describe test.persons;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| id          | int(11)      | NO   | PRI | 0       |       |
| description | varchar(255) | YES  |     | NULL    |       |
| ContactName | varchar(255) | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> select * from persons;
+----+-------------------------------+----------------+
| id | description                   | ContactName    |
+----+-------------------------------+----------------+
| 11 | Gas canisters                 | James Woodborn |
| 56 | Digital compass for dog sleds | Charlie Parker |
+----+-------------------------------+----------------+
2 rows in set (0.07 sec)


mysql> describe test_log;
+-------------+--------------+------+-----+-------------+----------------+
| Field       | Type         | Null | Key | Default     | Extra          |
+-------------+--------------+------+-----+-------------+----------------+
| id          | int(11)      | NO   | PRI | NULL        | auto_increment |
| message     | varchar(255) | YES  |     | NULL        |                |
| ContactName | varchar(100) | YES  |     | Joey Baggio |                |
+-------------+--------------+------+-----+-------------+----------------+
3 rows in set (0.01 sec)


### delete a table
mysql> drop table test_log;
Query OK, 0 rows affected (0.28 sec)

mysql> show tables;
+----------------+
| Tables_in_test |
+----------------+
| persons        |
+----------------+
1 row in set (0.00 sec)


### I tried to load a csv file but it failed due to jhalverson not having access
### I was able to make the table as jhalverson, however
mysql> create table products (ID int, ProductName varchar(255), ContactName varchar(255), Price float);
Query OK, 0 rows affected (0.22 sec)

### I then logged in as root and was then able to load the CSV file
nanomines:mysql jhalverson$ mysql -u root -p

load data infile "/Users/jhalverson/data_science/sql_mysql/products.csv" into table products columns terminated by ',' lines terminated by '\n';


mysql> create table suppliers (ID int unsigned primary key auto_increment, Supplier char(80) not null, ProductName char(80) not null, ContactEmail char(80) default 'contact@host.com');
Query OK, 0 rows affected (0.06 sec)

mysql> insert into suppliers (Supplier, ProductName) values ('Chips chips', 'Straws');                                      Query OK, 1 row affected (0.00 sec)

mysql> select * from suppliers;
+----+-------------+-------------+------------------+
| ID | Supplier    | ProductName | ContactEmail     |
+----+-------------+-------------+------------------+
|  1 | Chips chips | Straws      | contact@host.com |
+----+-------------+-------------+------------------+
1 row in set (0.00 sec)


### Joins
#The INNER JOIN creates a new result table by combining column values of two
#tables (table1 and table2) based upon the join-predicate. The query
#A full join is equivalent to a left join union all right join.
mysql> select * from suppliers;
+----+----------------------+-------------------+------------------------+
| ID | Supplier             | ProductName       | ContactEmail           |
+----+----------------------+-------------------+------------------------+
|  1 | Chips chips          | Straws            | info@chipschips.com    |
|  2 | Bed, Bath and Beyond | Knives            | help@b3.com            |
|  3 | Grossmans            | Drill bits        | mike@mikegrossmans.com |
|  4 | Fishbone Forks       | Ursula's Utensils | ursula@mainz.de        |
+----+----------------------+-------------------+------------------------+
4 rows in set (0.00 sec)

mysql> select * from products;
+------+----------------+---------------+--------+
| ID   | ProductName    | ContactName   | Price  |
+------+----------------+---------------+--------+
|    1 | Knives         | Joe Smith     |  19.99 |
|    2 | Spoons         | Karen McGue   |   2.38 |
|    3 | Fishbone Forks | Captain Joe   | 121.34 |
|    4 | Straws         | Mitch Cohawke |  33.99 |
+------+----------------+---------------+--------+
4 rows in set (0.00 sec)

mysql> select * from products left join suppliers on products.productname=suppliers.productname;
+------+----------------+---------------+--------+------+----------------------+-------------+---------------------+
| ID   | ProductName    | ContactName   | Price  | ID   | Supplier             | ProductName | ContactEmail        |
+------+----------------+---------------+--------+------+----------------------+-------------+---------------------+
|    4 | Straws         | Mitch Cohawke |  33.99 |    1 | Chips chips          | Straws      | info@chipschips.com |
|    1 | Knives         | Joe Smith     |  19.99 |    2 | Bed, Bath and Beyond | Knives      | help@b3.com         |
|    2 | Spoons         | Karen McGue   |   2.38 | NULL | NULL                 | NULL        | NULL                |
|    3 | Fishbone Forks | Captain Joe   | 121.34 | NULL | NULL                 | NULL        | NULL                |
+------+----------------+---------------+--------+------+----------------------+-------------+---------------------+
4 rows in set (0.01 sec)

mysql> select * from products inner join suppliers on products.productname=suppliers.productname;
+------+-------------+---------------+-------+----+----------------------+-------------+---------------------+
| ID   | ProductName | ContactName   | Price | ID | Supplier             | ProductName | ContactEmail        |
+------+-------------+---------------+-------+----+----------------------+-------------+---------------------+
|    4 | Straws      | Mitch Cohawke | 33.99 |  1 | Chips chips          | Straws      | info@chipschips.com |
|    1 | Knives      | Joe Smith     | 19.99 |  2 | Bed, Bath and Beyond | Knives      | help@b3.com         |
+------+-------------+---------------+-------+----+----------------------+-------------+---------------------+
2 rows in set (0.00 sec)



### Here is an alternative to describe:

mysql> desc products;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| ID          | int(11)      | YES  |     | NULL    |       |
| ProductName | varchar(255) | YES  |     | NULL    |       |
| ContactName | varchar(255) | YES  |     | NULL    |       |
| Price       | float        | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
4 rows in set (0.16 sec)


### Unicode
Nvarchar versus varchar

### SQL provides a variety of math functions

### Having
# The GROUP BY clause follows the WHERE clause in a SELECT statement and precedes the ORDER BY clause.
select country, sum(CustomerID) as sumfunc from customers group by country having sumfunc > 100 and Country like 'U%' order by sumfunc; 
Country	sumfunc
UK	213
USA	796


### use SQL as a calculator
select 45.0/2.98;


### any and all
SQL> SELECT * FROM CUSTOMERS
WHERE AGE > ALL (SELECT AGE FROM CUSTOMERS WHERE SALARY > 6500);
+----+--------+-----+-----------+---------+
| ID | NAME   | AGE | ADDRESS   | SALARY  |
+----+--------+-----+-----------+---------+
|  1 | Ramesh |  32 | Ahmedabad | 2000.00 |
+----+--------+-----+-----------+---------+
1 row in set (0.02 sec)
SQL> SELECT * FROM CUSTOMERS
WHERE AGE > ANY (SELECT AGE FROM CUSTOMERS WHERE SALARY > 6500);
+----+----------+-----+-----------+---------+
| ID | NAME     | AGE | ADDRESS   | SALARY  |
+----+----------+-----+-----------+---------+
|  1 | Ramesh   |  32 | Ahmedabad | 2000.00 |
|  2 | Khilan   |  25 | Delhi
|  4 | Chaitali |  25 | Mumbai
|  5 | Hardik   |  27 | Bhopal
+----+----------+-----+-----------+---------


### the like can be applied to numbers as well as text
select * from products where price like '_8';
# the percent symbol wildcard represents 0 or more characters


### Union, union all, intercept, except are all possible
